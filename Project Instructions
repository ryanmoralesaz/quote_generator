Project Instructions

To complete this project, follow the instructions below. If you get stuck, ask a question in the community.

6 steps
xxx Create an array of JavaScript objects to hold the data for your quotes. Name the array quotes. 
xxx The quotes array should be accessible in the global scope.

Each quote object in the quotes array should have the following properties:
xxxA quote property which contains a string: the text of the quote that will be displayed on the page.

xxxA source property which contains a string identifying the creator of the quote. For example: "Mark Twain" or "Traditional Irish proverb.”

xxxAn optional citation property which contains a string identifying where the quote comes from, like a speech or publication. For example, "Famous Anonymous Jokes." 

xxxIf there is no known publication, do not include this property on the object.

xxxAn optional year property which contains a number identifying the date of the quote. For example, 1997. If there is no known date, then do not include this property on the object.

xxxCreate a function named getRandomQuote which:

xxxselects a random quote object from the quotes array

xxxreturns the randomly selected quote object

xxxCreate a function named printQuote which follows these rules:

xxxprintQuote calls the getRandomQuote function and stores the returned quote object in a variable

printQuote constructs a string containing the different properties of the quote object using the following HTML template:
<p class="quote"> [quote here] </p>
<p class="source"> [source here]
  <span class="citation"> [citation here] </span>
  <span class="year"> [year here] </span>
</p>

xxxprintQuote doesn't add a for a missing citation or a if the year property is missing

printQuote displays the final HTML string to the page. You can use this JS snippet to accomplish that: xxxxdocument.getElementById('quote-box').innerHTML

Add comments to your code.

Before you submit your project for review, make sure you can check off all of the items on the Student Project Submission Checklist. The checklist is designed to help you make sure you’ve met the grading requirements and that your project is complete and ready to be submitted!
NOTE: It’s good practice to check your project for cross browser compatibility. We recommend making sure your project looks and functions as expected in at least 3 different browsers.

Extra Credit

To get an "exceeds" rating, you can expand on the project in the following ways:

4 steps

xxxAdd more properties to the quote object. For example, a tags property could include a list of "tags" like "humor", "business", or "politics" to categorize each quote.

xxxWhen the quote changes, randomly change the background color of the page.

xxxDon't display a random quote more than once until ALL quotes from the array have been displayed. To help reviewers (and yourself) verify that the quotes don’t repeat until they’ve all been displayed, log the quote to the console each time the “Show Another Quote” button is clicked.

Refresh the quote after a set amount of time. For example, every 30 seconds, make a new quote appear. (You can use the setInterval() or setTimeout() method to do this -- see the links in the “Additional Resources” section).
NOTE: To get an "Exceeds Expectations" grade for this project, you'll need to "exceed" on every requirement that has an "Exceeds Expectations" option.
